{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","app.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/covid_19_banner.jpg","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","recoverd","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","backgroundColor","fill","console","log","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","src","Covid","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a4bb843.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1PPxw\",\"card\":\"Cards_card__HoaAl\",\"infected\":\"Cards_infected__31XHJ\",\"recoverd\":\"Cards_recoverd__FtCuB\",\"deaths\":\"Cards_deaths__3EnNW\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid} from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nimport styles from \"./Cards.module.css\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) =>{\r\n\r\n  if(!confirmed){\r\n    return \"Loading...\";\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\" >\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)} >\r\n          <CardContent>\r\n            <Typography color=\"#e6e3e3\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp \r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"#e6e3e3\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of Cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recoverd)} >\r\n          <CardContent>\r\n            <Typography color=\"#e6e3e3\" gutterBottom>\r\n              Recoverd\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp \r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"#e6e3e3\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of recoveries from COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)} >\r\n          <CardContent>\r\n            <Typography color=\"#e6e3e3\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp \r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"#e6e3e3\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of deaths caused by COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\nexport default Cards;","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`\r\n  }\r\n\r\n  try{\r\n    const { data: { confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\r\n\r\n//    const modifiedData ={\r\n//      confirmed,\r\n//      recovered,\r\n//      deaths,\r\n//      lastUpdate,\r\n//    }\r\n//    return modifiedData;\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n    \r\n  } catch (error){\r\n\r\n  }\r\n}\r\n\r\n\r\nexport const fetchDailyData = async () => {\r\n  try{\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n//    console.log(modifiedData)\r\n    return modifiedData;\r\n  } catch{\r\n\r\n  }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {data: {countries}} = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch(error){\r\n\r\n  }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nimport styles from \"./Chart.module.css\"\r\n\r\nconst Chart = ({ data: {confirmed, recovered, deaths}, country }) =>{\r\n\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () =>{\r\n      setDailyData( await fetchDailyData());\r\n    }\r\n\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = (\r\n    dailyData.length\r\n      ? (\r\n        <Line\r\n        data={\r\n          {\r\n            labels: dailyData.map(({ date }) => date ),\r\n            datasets: [{\r\n\r\n              data: dailyData.map(({confirmed}) => confirmed ),\r\n              label: \"Infected\",\r\n              borderColor: \"rgb(0, 0, 255)\",\r\n              backgroundColor: \"rgba(0, 0, 255, 0.5)\",\r\n              fill: true,\r\n            }, {\r\n\r\n              data: dailyData.map(({deaths}) => deaths ),\r\n              label: \"Deaths\",\r\n              borderColor: \"rgb(255, 0, 0)\",\r\n              backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n              fill: true,\r\n\r\n            }],\r\n          }\r\n        }\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  console.log(recovered)\r\n\r\n  const barChart = (\r\n    confirmed\r\n    ? (\r\n      <Bar \r\n        data={\r\n          {\r\n            labels: [\"Infected\", \"Recoverd\", \"Deaths\"],\r\n            datasets:[\r\n              {\r\n                label: \"People\",\r\n                backgroundColor: [\r\n                  \"rgba(0, 0, 255, 0.5)\",\r\n                  \"rgba(0, 255, 0, 0.5)\", \r\n                  \"rgba(255, 0, 0, 0.5)\",\r\n                ],\r\n                data: [confirmed.value, recovered.value, deaths.value],\r\n              }\r\n            ]\r\n          }\r\n        }\r\n        options={\r\n          {\r\n            legend: {display:false},\r\n            title: {display: true, text:`current state in ${country}`}\r\n          }\r\n        }\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  )\r\n}\r\nexport default Chart;","import React, { useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\n\r\nimport { fetchCountries } from \"../../api\";\r\n\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) =>{\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    }\r\n\r\n    fetchAPI();\r\n  },[setFetchedCountries]);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  )\r\n}\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport Cards from \"./components/Cards/Cards\";\r\nimport Chart from \"./components/Chart/Chart\";\r\nimport CountryPicker from \"./components/CountryPicker/CountryPicker\";\r\nimport Covid from \"./images/covid_19_banner.jpg\";\r\n\r\nimport styles from \"./App.module.css\";\r\n\r\nimport {fetchData} from \"./api\";\r\n\r\nclass App extends React.Component{\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  }\r\n\r\n  async componentDidMount(){\r\n    const fetchedData = await fetchData();\r\n\r\n    this.setState({ data: fetchedData});\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n\r\n    console.log(country)\r\n    \r\n    this.setState({ data: fetchedData, country: country});\r\n  }\r\n\r\nrender(){\r\n\r\n  const {data, country} = this.state;\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <img src={Covid}  xs={12} md={6} alt=\"\"/>\r\n      <Cards data={data}/> \r\n      <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n      <Chart data={data} country={country} />\r\n    </div>\r\n  )\r\n}\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./app\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__39jCw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1avYP\"};","module.exports = __webpack_public_path__ + \"static/media/covid_19_banner.c0d6cf84.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3YQnM\"};"],"sourceRoot":""}